<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>in.newdevpoint</groupId>
    <artifactId>spring-boot-bootcamp</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring-boot-bootcamp</name>
    <description>Spring boot sample of User</description>
    <properties>
        <java.version>11</java.version>
    </properties>
    <dependencies>
        <!-- ============== Spring Boot Core Dependencies ============== -->
        <!-- Core Spring Boot starter with auto-configuration support -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <!-- Spring Boot starter for building web applications -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- Spring Boot starter for testing Spring Boot applications -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- ============== End Spring Boot Core Dependencies ============== -->

        <!-- ============== MongoDB Dependencies ============== -->
        <!-- Spring Boot starter for MongoDB database integration -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <!-- ============== End MongoDB Dependencies ============== -->

        <!-- ============== Security & JWT Dependencies ============== -->
        <!-- Spring Boot starter for security features -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- JWT API for creating and parsing JSON Web Tokens -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.11.5</version>
        </dependency>
        <!-- JWT implementation for runtime -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.11.5</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Jackson support for JWT -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.11.5</version>
            <scope>runtime</scope>
        </dependency>
        <!-- ============== End Security & JWT Dependencies ============== -->

        <!-- ============== OpenAPI (Swagger) Dependencies ============== -->
        <!-- OpenAPI UI for API documentation -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.3.0</version>
        </dependency>
        <!-- Spring Boot starter for validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!-- Java Bean Validation API -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
        </dependency>
        <!-- Java Annotation API -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3</version>
        </dependency>
        <!-- Servlet API -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>
        <!-- Jackson databind with nullable support -->
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.6</version>
        </dependency>
        <!-- ============== End OpenAPI (Swagger) Dependencies ============== -->

        <!-- ============== Testing Dependencies ============== -->
        <!-- Mockito core for mocking in tests -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Mockito JUnit Jupiter integration -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- ============== End Testing Dependencies ============== -->

        <!-- ============== Utility Dependencies ============== -->
        <!-- Lombok for reducing boilerplate code -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.34</version>
            <scope>provided</scope>
        </dependency>
        <!-- MapStruct for object mapping -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>1.5.5.Final</version>
        </dependency>
        <!-- Spotless for code formatting -->
        <dependency>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>2.43.0</version>
        </dependency>
        <!-- REST Query Engine for dynamic query building -->
        <dependency>
            <groupId>com.github.rutledgepaulv</groupId>
            <artifactId>rest-query-engine</artifactId>
            <version>0.7.1</version>
        </dependency>
        <!-- ============== End Utility Dependencies ============== -->

        <!-- ============== AOP Dependencies ============== -->
        <!-- Spring Boot starter for Aspect-Oriented Programming -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- ============== End AOP Dependencies ============== -->

        <!-- ============== Logging Dependencies ============== -->
        <!-- Spring Boot starter for logging -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <!-- ============== End Logging Dependencies ============== -->

        <!-- ============== Monitoring Dependencies ============== -->
        <!-- Spring Boot Actuator for application monitoring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- ============== End Monitoring Dependencies ============== -->
    </dependencies>


    <build>
        <plugins>
            <!-- ============== Spring Boot Maven Plugin ============== -->
            <!-- Plugin for creating executable jars and running Spring Boot applications -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- ============== End Spring Boot Maven Plugin ============== -->

            <!-- ============== OpenAPI Generator Plugin ============== -->
            <!-- Plugin for generating Spring Boot code from OpenAPI/Swagger specifications -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>6.0.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/openapi.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <artifactId>SmartGeo</artifactId>
                            <output>${basedir}/target/generated-sources</output>
                            <configOptions>
                                <sourceFolder>src/main/java</sourceFolder>
                                <interfaceOnly>true</interfaceOnly>
                            </configOptions>
                            <packageName>in.newdevpoint.bootcamp</packageName>
                            <apiPackage>in.newdevpoint.bootcamp.api</apiPackage>
                            <modelPackage>in.newdevpoint.bootcamp.dto</modelPackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- ============== End OpenAPI Generator Plugin ============== -->

            <!-- ============== Maven Compiler Plugin ============== -->
            <!-- Plugin for compiling Java sources with specific Java version and annotation processors -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                    <annotationProcessorPaths>
                        <!-- MapStruct annotation processor for generating mapper implementations -->
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>1.4.2.Final</version>
                        </path>
                        <!-- Lombok annotation processor for generating boilerplate code -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.20</version>
                        </path>
                        <!-- Lombok-MapStruct binding for better integration between Lombok and MapStruct -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!-- ============== End Maven Compiler Plugin ============== -->

            <!-- ============== Spotless Maven Plugin ============== -->
            <!-- Plugin for code formatting and style enforcement -->
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>2.36.0</version>
                <configuration>
                    <java>
                        <googleJavaFormat>
                            <version>1.25.2</version>
                            <style>GOOGLE</style>
                        </googleJavaFormat>
                    </java>
                </configuration>
                <executions>
                    <!-- Execution for checking code format during build -->
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <!-- Execution for applying code formatting -->
                    <execution>
                        <id>apply</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- ============== End Spotless Maven Plugin ============== -->
        </plugins>
    </build>
    <repositories>
        <repository>
            <id>maven_central</id>
            <name>Maven Central</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
    </repositories>

</project>

